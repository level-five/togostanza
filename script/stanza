#!/usr/bin/env ruby

require_relative '../config/environment'
require 'thor'
require 'launchy'
require 'uri'

module Script
  class Stanza < Thor
    desc 'list', ''
    def list
      Dir[StanzaBase.root.join('*.rb')].each do |f|
        require f
      end

      StanzaBase.descendants.map(&:slug).sort.each do |slug|
        say slug
      end
    end

    desc 'show_context <stanza name> <param1=val1 param2=val2>', ''
    def show_context(slug, *param_strs)
      params = convert_params(param_strs)

      puts JSON.pretty_generate(StanzaBase.find_by_slug(slug).new(params).context)
    end

    desc 'render <stanza name> <param1=val1 param2=val2>', ''
    def render(slug, *param_strs)
      params = convert_params(param_strs)

      puts StanzaBase.find_by_slug(slug).new(params).render
    end

    desc 'open <stanza name> <param1=val1 param2=val2>', ''
    def open(slug, *param_strs)
      query = {
        stanza_params: convert_params(param_strs)
      }.to_query

      Launchy.open URI::HTTP.build(
        host:  'localhost',
        port:  3000,
        path:  "/stanza/#{slug}",
        query: query
      )
    end

    private

    def convert_params(param_strs)
      param_strs.each_with_object({}) {|str, hash|
        k, v = str.split('=', 2)

        hash[k] = v.to_s
      }.with_indifferent_access
    end
  end
end

Script::Stanza.start
